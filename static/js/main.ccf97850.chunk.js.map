{"version":3,"sources":["Components/Nav/navigation.module.css","Components/Main/Pokemons/pokemons.module.css","Components/Pages/pages.module.css","Components/Main/Pokemon/pokemon.module.css","Components/Preloader/preloader.module.css","Components/Images/pokeBall.png","Components/Main/Pokemons/pokemons.jsx","Components/Images/preloaderImg.gif","Components/Preloader/preloader.jsx","Components/Selectors/pokemonsSelector.js","Components/Main/Pokemons/pokemonsConteiner.jsx","Components/Nav/navigation.jsx","api/api.js","Redux/pokemonsReducer.js","Components/Selectors/navigationSelector.js","Components/Images/pokeapi.png","Components/Nav/navigationConteiner.jsx","Components/Pages/pages.jsx","Redux/pageReducer.js","Components/Selectors/pagesSelector.js","Components/Pages/pagesConteiner.jsx","Components/Images/spitz.png","Components/Main/Pokemon/pokemon.jsx","Components/Selectors/pokemonSelector.js","Redux/pokemonReducer.js","Components/Main/Pokemon/pokemonConteiner.jsx","App.js","Redux/store.js","index.js"],"names":["module","exports","Pokemons","React","memo","props","className","styles","wrapper","main","pokemons","map","element","pokemonProperty","to","name","src","sprites","front_default","pokeBall","alt","Preloader","style","preloader","pokemonsSelector","createSelector","state","pokemon","toUpperCase","slice","sort","a","b","PokemonsConteiner","isLoading","connect","Navigation","pokemonNamesElement","pokemonNamesUpperCase","pokemonName","instance","axios","baseURL","pokemonsAPI","limit","offset","get","SET_POKEMONS","SET_NEW_ARRAY","TOGGLE_IS_LOADING","initialState","getIsLoading","type","getPokemonNames","pages","pokemonNames","pokemonNamesSelector","pokemonNamesUpperCaseSelector","NavigationConteiner","useEffect","getPokemons","logo","pokeApi","dispatch","response","data","console","error","message","Pages","page","Math","ceil","countPokemons","i","push","pageNumber","p","onClick","onPageChanged","br","br2","SET_POKEMONS_NAMES","SET_LIMIT","SET_OFFSET","SET_TOTAL_COUNT","getLimit","offsetSelector","getCountPokemons","PagesConteiner","getPokemonName","setNewArray","setOffset","results","count","Pokemon","abilities","ability","types","img","spitz","id","height","weight","addPokemon","SET_POKEMON","setPokemon","PokemonConteiner","this","match","params","toLowerCase","getPokemon","PureComponent","compose","other","dream_world","log","withRouter","App","Fragment","path","render","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","window","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.ccf97850.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"navigation_wrapper__fkgdO\",\"logo\":\"navigation_logo__iwAe5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pokemons_wrapper__DnBo9\",\"main\":\"pokemons_main__1l_L4\",\"pokemonProperty\":\"pokemons_pokemonProperty__2RED9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"pages_pages__1J-fc\",\"br\":\"pages_br__SbHGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"pokemon_wrapper__30FDF\",\"main\":\"pokemon_main__cpZgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"preloader_wrapper__8zPFl\"};","export default __webpack_public_path__ + \"static/media/pokeBall.0f4ce750.png\";","import React from 'react';\r\nimport styles from './pokemons.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport pokeBall from '../../Images/pokeBall.png';\r\n\r\n\r\nconst Pokemons = React.memo((props)=>{\r\n\r\n    return(\r\n        <div className = {styles.wrapper}>\r\n            <div className = {styles.main}>\r\n                {\r\n                    props.pokemons.map(element => \r\n                    <div key = {element.name} className = {styles.pokemonProperty}>\r\n                        <NavLink to ={\"/pokemon/\" + element.name}>\r\n                         <img src={element.sprites.front_default || pokeBall} alt = \"pokemonImg\" /> </NavLink>\r\n                             <p>{element.name}</p>\r\n                    </div>\r\n                    )\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Pokemons;","export default __webpack_public_path__ + \"static/media/preloaderImg.2b1fb524.gif\";","import React from 'react';\r\nimport preloader from '../Images/preloaderImg.gif';\r\nimport style from './preloader.module.css';\r\n\r\nconst Preloader = React.memo(() =>{\r\n    return(\r\n        <div className = {style.wrapper}>\r\n            <img src = {preloader} alt = 'preloader' />\r\n            \r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Preloader;","import {\r\n    createSelector\r\n} from 'reselect';\r\n\r\nconst getPokemons = (state) => {\r\n    return state.pokemons.pokemons;\r\n}\r\n\r\nexport const pokemonsSelector = createSelector(getPokemons, (pokemons) => {\r\n\r\n    return pokemons.map(pokemon => {\r\n            return {\r\n                ...pokemon,\r\n                name: pokemon.name[0].toUpperCase() + pokemon.name.slice(1)\r\n            }\r\n        })\r\n        .sort((a, b) => a.name > b.name ? 1 : a.name < b.name ? -1 : 0);\r\n});","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Pokemons from './pokemons';\r\nimport Preloader from '../../Preloader/preloader';\r\nimport {pokemonsSelector} from '../../Selectors/pokemonsSelector';\r\n\r\nconst PokemonsConteiner = React.memo((props) =>{\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n           {props.isLoading ? <Preloader /> : <Pokemons {...props} />}\r\n        </div>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemons: pokemonsSelector(state),\r\n        isLoading: state.pokemons.isLoading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(PokemonsConteiner);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './navigation.module.css';\r\n\r\n\r\nconst Navigation = React.memo((props)=>{\r\n\r\nlet pokemonNamesElement = props.pokemonNamesUpperCase.map(pokemonName => \r\n    <div key = {pokemonName}>\r\n       <NavLink to = {\"/pokemon/\" +pokemonName}>{pokemonName}</NavLink>\r\n    </div>\r\n\r\n    );\r\n\r\n    return(\r\n        <div className={styles.wrapper}>\r\n            {pokemonNamesElement}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Navigation;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://pokeapi.co/api/v2/\"\r\n}); \r\n\r\nexport const pokemonsAPI = {\r\n    getPokemonName(limit, offset){\r\n        return instance.get(`pokemon?limit=${limit}t&offset=${offset}`);\r\n    },\r\n    getPokemon(pokemonName){\r\n        return instance.get(`pokemon/${pokemonName}`);\r\n    }\r\n};","import {pokemonsAPI} from '../api/api';\r\n\r\n\r\nconst SET_POKEMONS = 'test-pokemon/pokemons/GET-POKEMONS';\r\nconst SET_NEW_ARRAY = 'test-pokemon/pokemons/SET-NEW-ARRAY';\r\nconst TOGGLE_IS_LOADING = 'test-pokemon/pokemons/TOGGLE-IS-LOADING';\r\n\r\n\r\nconst initialState = {\r\n    pokemons: [],\r\n    isLoading: false\r\n};\r\n\r\nexport const pokemonsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n     \r\n        case SET_POKEMONS: \r\n        return {\r\n            ...state,\r\n            pokemons: [...state.pokemons, action.pokemon]\r\n        };\r\n\r\n        case SET_NEW_ARRAY: \r\n        return {\r\n            ...state,\r\n            pokemons: []\r\n        };\r\n        case TOGGLE_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.isLoading\r\n            };\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setPokemons = (pokemon) => {return{type: SET_POKEMONS, pokemon}};\r\nexport const setNewArray = () => {return{type: SET_NEW_ARRAY}};\r\nexport const getIsLoading = (isLoading) => {return{type:TOGGLE_IS_LOADING, isLoading}};\r\n\r\n\r\nexport const getPokemons = (pokemonName) => async (dispatch) => {\r\ntry{\r\n    if(pokemonName){\r\n        dispatch(getIsLoading(false))\r\n    } else (\r\n        dispatch(getIsLoading(true))\r\n    )\r\n\r\n    let response = await pokemonsAPI.getPokemon(pokemonName);\r\n    dispatch(setPokemons(response.data));\r\n  \r\n}catch(err){\r\n    console.error(err.message);\r\n}\r\n};","import {createSelector} from 'reselect';\r\n\r\n\r\nexport const getPokemonNames =(state) => {\r\n    return  state.pages.pokemonNames;\r\n    };\r\n\r\nexport const pokemonNamesSelector = createSelector(getPokemonNames, (pokemonNames) => {\r\n    return pokemonNames.sort();\r\n    });\r\n    \r\nexport const pokemonNamesUpperCaseSelector = createSelector(getPokemonNames, (pokemonNames) => {\r\n    return pokemonNames.map(pokemonName => pokemonName[0].toUpperCase() + pokemonName.slice(1)).sort();\r\n     });\r\n        ","export default __webpack_public_path__ + \"static/media/pokeapi.888baca4.png\";","import React, {useEffect} from 'react';\r\nimport Navigation from './navigation';\r\nimport {connect} from 'react-redux';\r\nimport {getPokemons} from '../../Redux/pokemonsReducer';\r\nimport {pokemonNamesSelector, pokemonNamesUpperCaseSelector } from '../Selectors/navigationSelector';\r\nimport style from './navigation.module.css';\r\nimport pokeApi from '../Images/pokeapi.png'\r\n\r\n\r\nconst NavigationConteiner = React.memo((props) => {\r\n\r\n   useEffect(() => {\r\n        props.pokemonNames.map(pokemonName => props.getPokemons(pokemonName)); \r\n    },[props]);\r\n\r\nreturn(\r\n    \r\n<div>\r\n    <div className = {style.logo}><img src = {pokeApi} alt='logoPokiApi' /></div>\r\n    <Navigation {...props} />\r\n</div>\r\n);\r\n});\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n     pokemonNames: pokemonNamesSelector(state),\r\n     pokemonNamesUpperCase:  pokemonNamesUpperCaseSelector(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getPokemons})(NavigationConteiner);","import React from 'react';\r\nimport styles from './pages.module.css';\r\n\r\nconst Pages = React.memo((props)=>{\r\n    \r\n    let page = Math.ceil(props.countPokemons/props.limit);\r\n    let pages = [];\r\n    for(let i = 1; i <= page; i++){\r\n        pages.push(i);\r\n    }\r\n    \r\n     let pageNumber = props.offset/props.limit + 1;\r\n    \r\n    return(\r\n\r\n            <div className={styles.pages}>\r\n                    {pages.map(p => {return <span key={p} onClick={()=>{props.onPageChanged(p)}} className={pageNumber === p ? styles.br : styles.br2}>{p}</span>;})}\r\n            </div>\r\n       \r\n    );\r\n});\r\n\r\nexport default Pages;","import {pokemonsAPI} from '../api/api';\r\n\r\nconst SET_POKEMONS_NAMES = 'test-pokemon/pokemons/GET-POKEMONS-NAMES';\r\nconst SET_LIMIT = 'test-pokemon/pokemons/SET-LIMIT';\r\nconst SET_OFFSET = 'test-pokemon/pokemons/SET-OFFSET';\r\nconst SET_TOTAL_COUNT =  'test-pokemon/pokemons/SET-TOTAL-COUNT';\r\n\r\nconst initialState = {\r\n    pokemonNames: [],\r\n    limit: 100,\r\n    offset: 0,\r\n    countPokemons: 1000\r\n};\r\n\r\nexport const pageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_POKEMONS_NAMES:\r\n            return {\r\n                ...state,\r\n                pokemonNames: action.pokemonNames.map(pokemonName => pokemonName.name)\r\n            };\r\n      \r\n        case SET_LIMIT:\r\n            return {\r\n                ...state,\r\n                limit: action.limit\r\n            };\r\n\r\n        case SET_OFFSET:\r\n            return {\r\n                ...state,\r\n                offset: action.offset\r\n            };\r\n\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                    ...state,\r\n                    countPokemons: action.count\r\n                };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setPokemonName = (pokemonNames) => {return{type: SET_POKEMONS_NAMES, pokemonNames}};\r\nexport const setLimit = (limit) => {return{type: SET_LIMIT, limit}};\r\nexport const setOffset = (offset) => {return{type: SET_OFFSET, offset}};\r\nexport const setCount = (count) => {return{type: SET_TOTAL_COUNT, count}};\r\n\r\n\r\nexport const getPokemonName =(limit, offset) => async (dispatch) => {\r\n    try{\r\n        let response = await pokemonsAPI.getPokemonName(limit, offset);\r\n        dispatch(setPokemonName(response.data.results));\r\n        dispatch(setCount(response.data.count));\r\n    }catch(err){\r\n        console.error(err.message);\r\n    }\r\n};\r\n\r\n","import {createSelector} from 'reselect';\r\n\r\nexport const getLimit = (state) => {\r\n    return state.pages.limit;\r\n};\r\n\r\nexport const getOffset = (state) => {\r\n    return state.pages.offset;\r\n};\r\n\r\nexport const offsetSelector = createSelector(getOffset, (offset) => offset);\r\n\r\nexport const getCountPokemons = (state) => {\r\n    return state.pages.countPokemons;\r\n};","import React, {useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Pages from './pages';\r\nimport {getPokemonName, setOffset} from '../../Redux/pageReducer';\r\nimport {getLimit, offsetSelector, getCountPokemons} from '../Selectors/pagesSelector';\r\nimport {setNewArray} from '../../Redux/pokemonsReducer';\r\n\r\n\r\nconst PagesConteiner = React.memo((props) => {\r\n\r\n    useEffect(() => {\r\n        props.getPokemonName(props.limit, props.offset);\r\n        // eslint-disable-next-line \r\n    },[props.offset]);\r\n\r\n    let onPageChanged = (p) => {\r\n        props.setNewArray();\r\n        let offset = (p - 1)*100;\r\n        props.setOffset(offset);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <Pages {...props}\r\n        onPageChanged = {onPageChanged} />\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        limit: getLimit(state),\r\n        offset: offsetSelector(state),\r\n        countPokemons: getCountPokemons(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {getPokemonName, setOffset, setNewArray})(PagesConteiner);","export default __webpack_public_path__ + \"static/media/spitz.1f15689f.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './pokemon.module.css';\r\nimport spitz from '../../Images/spitz.png';\r\n\r\nconst Pokemon = React.memo((props) => {\r\n\r\n    let type = props.pokemon.abilities.map(element => element.ability.name + ' / ');\r\n    let ability = props.pokemon.types.map(element => element.type.name + ' / ');\r\n    let name = props.pokemon.name[0].toUpperCase() + props.pokemon.name.slice(1);\r\n\r\n    return (\r\n        <div className={style.wrapper} >\r\n            <div>\r\n                <h1>{name}</h1>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/\"> <img src={props.pokemon.img || spitz} alt='pokemonImg' /></NavLink>\r\n            </div>\r\n            <div className={style.main} >\r\n                <p>#{props.pokemon.id}</p>\r\n                <p>Type: {type}</p>\r\n                <p>Ability: {ability}</p>\r\n                <p>Height: {props.pokemon.height}</p>\r\n                <p>Weight: {props.pokemon.weight}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Pokemon;","export const addPokemon =(state) =>{\r\n    return state.pokemon.pokemon;\r\n};","import {pokemonsAPI} from '../api/api';\r\n\r\nconst SET_POKEMON = 'test-pokemon/pokemon/GET-POKEMON';\r\nconst TOGGLE_IS_LOADING = 'test-pokemon/pokemon/TOGGLE-IS-LOADING';\r\n\r\nconst initialState = {\r\n    pokemon: {},\r\n    isLoading: true\r\n};\r\n\r\nexport const pokemonReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_POKEMON:\r\n            return {\r\n                ...state,\r\n                pokemon: action.pokemon\r\n            };\r\n            case TOGGLE_IS_LOADING:\r\n                return {\r\n                    ...state,\r\n                    isLoading: action.isLoading\r\n                };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setPokemon = (abilities, height, id, name, types,weight, img) => {\r\n    return {\r\n        type: SET_POKEMON,\r\n        pokemon: {abilities, height, id, name, types, weight, img}\r\n    }\r\n};\r\nexport const getIsLoading = (isLoading) => {return{type:TOGGLE_IS_LOADING, isLoading}};\r\n\r\nexport const getPokemon = (id) => async (dispatch) => {\r\n    try {\r\n       \r\n        let response = await pokemonsAPI.getPokemon(id);\r\n        dispatch(setPokemon(response.data.abilities,\r\n                            response.data.height,\r\n                            response.data.id,\r\n                            response.data.name,\r\n                            response.data.types,\r\n                            response.data.weight,\r\n                            response.data.sprites.other.dream_world.front_default\r\n                         \r\n            ));\r\n            if(response.data.name === id){\r\n            dispatch(getIsLoading(false));}\r\n            else(console.log(\"LOADING ERROR\"))\r\n    } catch (err) {\r\n        console.error(err.message);\r\n    }\r\n};\r\n","import React from 'react';\r\nimport Pokemon from './pokemon';\r\nimport Preloader from '../../Preloader/preloader';\r\nimport {connect} from 'react-redux';\r\nimport {addPokemon} from '../../Selectors/pokemonSelector';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from 'redux';\r\nimport {getPokemon, getIsLoading} from '../../../Redux/pokemonReducer';\r\n\r\n\r\nclass PokemonConteiner extends React.PureComponent {\r\n\r\ncomponentDidMount(){\r\n    let id = (this.props.match.params.name)[0].toLowerCase() + (this.props.match.params.name).slice(1) ;\r\n    if(!id ){id = 1;}\r\n        this.props.getIsLoading(true);\r\n        this.props.getPokemon(id);\r\n}\r\n\r\nrender(){\r\n    return(\r\n    <div>\r\n        {this.props.isLoading ? <Preloader /> : <Pokemon {...this.props} />}\r\n    </div>\r\n    );\r\n}}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        pokemon: addPokemon(state),\r\n        isLoading: state.pokemon.isLoading\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getPokemon, getIsLoading}),\r\n    withRouter\r\n)(PokemonConteiner);","import React from 'react';\nimport PokemonsConteiner from './Components/Main/Pokemons/pokemonsConteiner';\nimport NavigationConteiner from './Components/Nav/navigationConteiner';\nimport PagesConteiner from './Components/Pages/pagesConteiner';\nimport PokemonConteiner from './Components/Main/Pokemon/pokemonConteiner';\nimport {Route} from 'react-router-dom';\n\n\nconst App = () => {\n  return(\n    <React.Fragment>\n       <header>\n      <PagesConteiner />\n      </header>\n       <nav>\n       <NavigationConteiner />\n      </nav>\n      <main>\n         <Route path = '/pokemon/:name' render = {() =><PokemonConteiner />}/>\n         <Route path = '/' render = {() =><PokemonsConteiner />} />\n       </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {pokemonReducer} from './pokemonReducer';\r\nimport {pokemonsReducer} from './pokemonsReducer';\r\nimport {pageReducer} from './pageReducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    pokemons: pokemonsReducer,\r\n    pages: pageReducer,\r\n    pokemon: pokemonReducer\r\n    }\r\n);\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/store';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter basename = {process.env.PUBLIC_URL} > \n     <Provider store = {store}>\n         <App />\n     </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}